08/14 13:36:49 - mmengine - [97m[4mINFO[39m[24m - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
08/14 13:36:49 - mmengine - [33m[4m[5mWARNING[39m[24m[25m - `Visualizer` backend is not initialized because save_dir is None.
08/14 13:36:49 - mmengine - [97m[4mINFO[39m[24m - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook
(BELOW_NORMAL) LoggerHook
 --------------------
before_train:
(VERY_HIGH   ) RuntimeInfoHook
(NORMAL      ) IterTimerHook
(VERY_LOW    ) CheckpointHook
 --------------------
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook
(NORMAL      ) IterTimerHook
(NORMAL      ) DistSamplerSeedHook
 --------------------
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook
(NORMAL      ) IterTimerHook
 --------------------
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook
(NORMAL      ) IterTimerHook
(NORMAL      ) SegVisualizationHook
(BELOW_NORMAL) LoggerHook
(LOW         ) ParamSchedulerHook
(VERY_LOW    ) CheckpointHook
 --------------------
after_train_epoch:
(NORMAL      ) IterTimerHook
(LOW         ) ParamSchedulerHook
(VERY_LOW    ) CheckpointHook
 --------------------
before_val_epoch:
(NORMAL      ) IterTimerHook
 --------------------
before_val_iter:
(NORMAL      ) IterTimerHook
 --------------------
after_val_iter:
(NORMAL      ) IterTimerHook
(NORMAL      ) SegVisualizationHook
(BELOW_NORMAL) LoggerHook
 --------------------
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook
(NORMAL      ) IterTimerHook
(BELOW_NORMAL) LoggerHook
(LOW         ) ParamSchedulerHook
(VERY_LOW    ) CheckpointHook
 --------------------
after_train:
(VERY_LOW    ) CheckpointHook
 --------------------
before_test_epoch:
(NORMAL      ) IterTimerHook
 --------------------
before_test_iter:
(NORMAL      ) IterTimerHook
 --------------------
after_test_iter:
(NORMAL      ) IterTimerHook
(NORMAL      ) SegVisualizationHook
(BELOW_NORMAL) LoggerHook
 --------------------
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook
(NORMAL      ) IterTimerHook
(BELOW_NORMAL) LoggerHook
 --------------------
after_run:
(BELOW_NORMAL) LoggerHook
 --------------------
c:\users\user\desktop\hubmap\mmsegmentation\mmseg\models\decode_heads\decode_head.py:120: UserWarning: For binary segmentation, we suggest using`out_channels = 1` to define the outputchannels of segmentor, and use `threshold`to convert `seg_logits` into a predictionapplying a threshold
  warnings.warn('For binary segmentation, we suggest using'
c:\users\user\desktop\hubmap\mmsegmentation\mmseg\models\builder.py:36: UserWarning: ``build_loss`` would be deprecated soon, please use ``mmseg.registry.MODELS.build()``
  warnings.warn('``build_loss`` would be deprecated soon, please use '
c:\users\user\desktop\hubmap\mmsegmentation\mmseg\models\losses\cross_entropy_loss.py:235: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\HuBMAP\lib\site-packages\mmengine\registry\build_functions.py", line 122, in build_from_cfg
    obj = obj_cls(**args)  # type: ignore
  File "C:\Users\user\anaconda3\envs\HuBMAP\lib\site-packages\mmengine\runner\loops.py", line 219, in __init__
    super().__init__(runner, dataloader)
  File "C:\Users\user\anaconda3\envs\HuBMAP\lib\site-packages\mmengine\runner\base_loop.py", line 26, in __init__
    self.dataloader = runner.build_dataloader(
  File "C:\Users\user\anaconda3\envs\HuBMAP\lib\site-packages\mmengine\runner\runner.py", line 1351, in build_dataloader
    dataset = DATASETS.build(dataset_cfg)
  File "C:\Users\user\anaconda3\envs\HuBMAP\lib\site-packages\mmengine\registry\registry.py", line 570, in build
    return self.build_func(cfg, *args, **kwargs, registry=self)
  File "C:\Users\user\anaconda3\envs\HuBMAP\lib\site-packages\mmengine\registry\build_functions.py", line 100, in build_from_cfg
    raise KeyError(
KeyError: 'CustomDataset is not in the dataset registry. Please check whether the value of `CustomDataset` is correct or it was registered as expected. More details can be found at https://mmengine.readthedocs.io/en/latest/advanced_tutorials/config.html#import-the-custom-module'
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "C:\Users\user\Desktop\HuBMAP\mmsegmentation\tools\train.py", line 107, in <module>
    main()
  File "C:\Users\user\Desktop\HuBMAP\mmsegmentation\tools\train.py", line 103, in main
    runner.train()
  File "C:\Users\user\anaconda3\envs\HuBMAP\lib\site-packages\mmengine\runner\runner.py", line 1701, in train
    self._train_loop = self.build_train_loop(
  File "C:\Users\user\anaconda3\envs\HuBMAP\lib\site-packages\mmengine\runner\runner.py", line 1493, in build_train_loop
    loop = LOOPS.build(
  File "C:\Users\user\anaconda3\envs\HuBMAP\lib\site-packages\mmengine\registry\registry.py", line 570, in build
    return self.build_func(cfg, *args, **kwargs, registry=self)
  File "C:\Users\user\anaconda3\envs\HuBMAP\lib\site-packages\mmengine\registry\build_functions.py", line 144, in build_from_cfg
    raise type(e)(
KeyError: "class `IterBasedTrainLoop` in mmengine/runner/loops.py: 'CustomDataset is not in the dataset registry. Please check whether the value of `CustomDataset` is correct or it was registered as expected. More details can be found at https://mmengine.readthedocs.io/en/latest/advanced_tutorials/config.html#import-the-custom-module'"